// Generated by view binder compiler. Do not edit!
package com.example.animepeak.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.animepeak.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView SettingsTitle;

  @NonNull
  public final Switch autoUpdate;

  @NonNull
  public final LinearLayout settingVideo;

  @NonNull
  public final LinearLayout updateButton;

  @NonNull
  public final AutoCompleteTextView videoautoCompleteTextView;

  private FragmentSettingsBinding(@NonNull RelativeLayout rootView, @NonNull TextView SettingsTitle,
      @NonNull Switch autoUpdate, @NonNull LinearLayout settingVideo,
      @NonNull LinearLayout updateButton, @NonNull AutoCompleteTextView videoautoCompleteTextView) {
    this.rootView = rootView;
    this.SettingsTitle = SettingsTitle;
    this.autoUpdate = autoUpdate;
    this.settingVideo = settingVideo;
    this.updateButton = updateButton;
    this.videoautoCompleteTextView = videoautoCompleteTextView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Settings_Title;
      TextView SettingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (SettingsTitle == null) {
        break missingId;
      }

      id = R.id.auto_update;
      Switch autoUpdate = ViewBindings.findChildViewById(rootView, id);
      if (autoUpdate == null) {
        break missingId;
      }

      id = R.id.setting_video;
      LinearLayout settingVideo = ViewBindings.findChildViewById(rootView, id);
      if (settingVideo == null) {
        break missingId;
      }

      id = R.id.update_button;
      LinearLayout updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.videoautoCompleteTextView;
      AutoCompleteTextView videoautoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (videoautoCompleteTextView == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((RelativeLayout) rootView, SettingsTitle, autoUpdate,
          settingVideo, updateButton, videoautoCompleteTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
